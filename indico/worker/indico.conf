import ast
import os


SQLALCHEMY_DATABASE_URI = "postgresql://{}:{}@{}:{}/{}".format(os.environ['PGUSER'], os.environ['PGPASSWORD'],
                                                               os.environ['PGHOST'], os.environ['PGPORT'],
                                                               os.environ['PGDATABASE'])

SECRET_KEY = os.environ['SECRET_KEY']

BASE_URL = "{SERVICE_PROTOCOL}://{SERVICE_HOSTNAME}".format(**os.environ)

if os.environ.get('SERVICE_PORT'):
    BASE_URL += ':' + os.environ.get('SERVICE_PORT')

ROUTE_OLD_URLS = os.environ.get('INDICO_ROUTE_OLD_URLS') or False
USE_PROXY = os.environ.get('USE_PROXY') or False

LOG_DIR          = "/opt/indico/log"
TEMP_DIR         = "/opt/indico/tmp"
CACHE_DIR        = "/opt/indico/cache"

CACHE_BACKEND = 'redis'
REDIS_CACHE_URL = os.environ['REDIS_CACHE_URL']

SMTP_SERVER           = (os.environ.get('SMTP_SERVER') or 'localhost', os.environ.get('SMTP_PORT') or 8025)
SMTP_LOGIN            = os.environ.get('SMTP_LOGIN') or ''
SMTP_PASSWORD         = os.environ.get('SMTP_PASSWORD') or ''
SMTP_USE_TLS          = os.environ.get('SMTP_USE_TLS') or False

SUPPORT_EMAIL = os.environ.get('INDICO_SUPPORT_EMAIL') or "root@localhost"
PUBLIC_SUPPORT_EMAIL = os.environ.get('INDICO_PUBLIC_SUPPORT_EMAIL') or "root@localhost"
NO_REPLY_EMAIL = os.environ.get('INDICO_NO_REPLY_EMAIL') or "noreply-root@localhost"

LOGGING_CONFIG_FILE = "/opt/indico/etc/logging.yaml"
SENTRY_DSN = os.environ.get('SENTRY_DSN') or None

DEFAULT_TIMEZONE = os.environ.get('INDICO_DEFAULT_TIMEZONE') or 'UTC'
DEFAULT_LOCALE = os.environ.get('INDICO_DEFAULT_LOCALE') or 'en_GB'

CELERY_BROKER = os.environ['CELERY_BROKER']

STORAGE_BACKENDS = ast.literal_eval(os.environ.get('INDICO_STORAGE_DICT', 'None')) or {'default': 'fs:/opt/indico/archive'}
ATTACHMENT_STORAGE = os.environ.get('ATTACHMENT_STORAGE') or 'default'

CUSTOMIZATION_DIR = os.environ.get('INDICO_CUSTOMIZATION_DIR') or '/opt/indico/custom'
CUSTOMIZATION_DEBUG = os.environ.get('INDICO_CUSTOMIZATION_DEBUG') or False
LOGO_URL = os.environ.get('INDICO_LOGO_URL') or ''

AUTH_PROVIDERS = ast.literal_eval(os.environ.get('INDICO_AUTH_PROVIDERS', 'None')) or {}
IDENTITY_PROVIDERS = ast.literal_eval(os.environ.get('INDICO_IDENTITY_PROVIDERS', 'None')) or {}
LOCAL_IDENTITIES = os.environ.get('INDICO_LOCAL_IDENTITIES') or False

ENABLE_ROOMBOOKING = os.environ.get('INDICO_ENABLE_ROOMBOOKING') or False

PLUGINS = tuple(x for x in os.environ.get('INDICO_EXTRA_PLUGINS','').split(',') if x.strip())
