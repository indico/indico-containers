version: "2"
services:
  indico-web: &indico-web
    build: indico/worker
    command: /opt/indico/run_indico.sh
    depends_on:
      - indico-redis
      - indico-celery
    networks:
      - backend
      - frontend
    env_file:
      - .env
      - indico.env
      - secrets/postgres.env
      - secrets/secret.env
    volumes:
      - 'archive:/opt/indico/archive'
      - 'logs:/opt/indico/log/nginx'
      - 'customization:/opt/indico/custom'
      - 'static-files:/opt/indico/static'
    tmpfs:
      - /opt/indico/tmp
  indico-static:
    build: indico/static
    networks:
      - frontend
  indico-celery:
    <<: *indico-web
    networks:
      - backend
    depends_on:
      - indico-redis
    command: /opt/indico/run_celery.sh
    ports: []
    volumes:
      - 'archive:/opt/indico/archive'
  indico-redis:
    image: redis
    networks:
      - backend
    volumes:
      - 'cache:/data'
  indico-postgres:
    image: centos/postgresql-96-centos7
    networks:
      - backend
    environment:
      - POSTGRESQL_USER=${PGUSER}
      - POSTGRESQL_DATABASE=${PGDATABASE}
    env_file:
      - secrets/postgres.env
    volumes:
      - 'database:/var/lib/pgsql/data'
  indico-nginx:
    build:
      context: nginx
      args:
        - CERT_BASENAME=${CERT_BASENAME}
    depends_on:
      - indico-web
    env_file:
      - .env
    ports:
      - "${SERVICE_HTTP_PORT}:${SERVICE_HTTP_PORT}"
      - "${SERVICE_HTTPS_PORT}:${SERVICE_HTTPS_PORT}"
    networks:
      - frontend
volumes:
  archive:
    external:
      name: ${ARCHIVE_VOLUME_HOST}
  static-files:
    external:
      name: ${STATIC_VOLUME_HOST}
  customization:
    external:
      name: ${CUSTOM_VOLUME_HOST}
  logs:
  cache:
  database:
    external:
      name: ${DB_VOLUME_HOST}
networks:
  backend: {}
  frontend: {}
